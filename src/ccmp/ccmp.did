type ChainMetadata = record { name : text; chain_type : ChainType };
type ChainType = variant { Evm; Unknown };
type Config = record {
  key : text;
  writer_interval_secs : nat64;
  signer_interval_secs : nat64;
  listener_interval_secs : nat64;
};
type ConfigUpdate = record {
  key : opt text;
  writer_interval_secs : opt nat64;
  signer_interval_secs : opt nat64;
  listener_interval : opt nat64;
};
type Result = variant { Ok : nat64; Err : text };
type Result_1 = variant { Ok : ChainMetadata; Err : text };
type Result_2 = variant {
  Ok : vec record { nat64; ChainMetadata };
  Err : text;
};
type Result_3 = variant { Ok : Config; Err : text };
type Result_4 = variant { Ok : text; Err : text };
type Result_5 = variant { Ok; Err : text };
service : {
  add_evm_chain : (text, text, text) -> (Result);
  get_chain_metadata : (nat64) -> (Result_1) query;
  get_chains_metadata : () -> (Result_2) query;
  get_config : () -> (Result_3) query;
  get_public_key : () -> (Result_4);
  remove_chain : (nat64) -> (Result_5);
  update_config : (ConfigUpdate) -> (Result_5);
}